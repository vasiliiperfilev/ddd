version: '3'
services:
  trainer-http:
    build:
      context: docker/app
    volumes:
      - ./internal:/internal
#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
    working_dir: /internal/trainer
    ports:
      - "127.0.0.1:3000:$PORT"
    env_file:
      - .env
    environment:
      SERVER_TO_RUN: http
    depends_on:
      migrate:
        condition: service_completed_successfully

  trainer-grpc:
    build:
      context: docker/app
    volumes:
      - ./internal:/internal
#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
    working_dir: /internal/trainer
    ports:
      - "127.0.0.1:3010:$PORT"
    env_file:
      - .env
    environment:
      SERVER_TO_RUN: grpc
    depends_on:
      migrate:
        condition: service_completed_successfully

  trainings-http:
    build:
      context: docker/app
    volumes:
      - ./internal:/internal
#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
    working_dir: /internal/trainings
    ports:
      - "127.0.0.1:3001:$PORT"
    env_file:
      - .env
    depends_on:
      migrate:
        condition: service_completed_successfully

  users-http:
    build:
      context: docker/app
    volumes:
      - ./internal:/internal
#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
    working_dir: /internal/users
    ports:
      - "127.0.0.1:3002:$PORT"
    environment:
      SERVER_TO_RUN: http
    env_file:
      - .env
    depends_on:
      migrate:
        condition: service_completed_successfully

  users-grpc:
    build:
      context: docker/app
    volumes:
      - ./internal:/internal
#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE
    working_dir: /internal/users
    ports:
      - "127.0.0.1:3020:$PORT"
    environment:
      SERVER_TO_RUN: grpc
    env_file:
      - .env
    depends_on:
      migrate:
        condition: service_completed_successfully

  mysql:
    image: mysql:8
    env_file:
      - .env
    ports:
      - "127.0.0.1:3306:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  
  migrate:
    image: migrate/migrate
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(mysql:3306)/${MYSQL_DATABASE}",
        "up"
      ]
